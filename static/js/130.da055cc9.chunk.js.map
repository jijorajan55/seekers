{"version":3,"file":"static/js/130.da055cc9.chunk.js","mappings":"4JAEA,MA2FA,EA3FoBA,IAA0B,IAAzB,SAAEC,EAAQ,MAAEC,GAAOF,EACtC,MAAOG,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,KACtCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,MAsBnC,OApBAK,EAAAA,EAAAA,YAAU,KAEUC,WAChB,IACE,MAAMC,QAAiBC,MAAMZ,GAC7B,IAAKW,EAASE,GACZ,MAAM,IAAIC,MAAM,6BAElB,MAAMC,QAAaJ,EAASK,OAC5Bb,EAAcY,EAAKE,QACnBX,GAAW,EACb,CAAE,MAAOY,GACPV,EAASU,EAAIC,SACbb,GAAW,EACb,GAGFc,EAAW,GACV,CAACpB,IAEAK,GAAgBgB,EAAAA,EAAAA,KAAA,OAAAC,SAAK,oBACrBf,GAAcgB,EAAAA,EAAAA,MAAA,OAAAD,SAAA,CAAK,UAAQf,MAG7BgB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBF,SAAA,EACpCD,EAAAA,EAAAA,KAAA,MAAIG,UAAU,0BAAyBF,SAAErB,KACzCsB,EAAAA,EAAAA,MAAA,QAAMC,UAAU,YAAWF,SAAA,CACxBpB,EAAWuB,KAAI,CAACC,EAAOC,IACH,SAAfD,EAAME,MAAkC,UAAfF,EAAME,MAAmC,WAAfF,EAAME,MAEzDL,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOG,UAAU,2BAA0BF,SAAEI,EAAMG,SACnDR,EAAAA,EAAAA,KAAA,SACEO,KAAMF,EAAME,KACZE,KAAMJ,EAAMI,KACZC,YAAaL,EAAMK,YACnBC,SAAUN,EAAMM,SAChBR,UAAU,sDAPJG,GAYK,WAAfD,EAAME,MAENL,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOG,UAAU,2BAA0BF,SAAEI,EAAMG,SACnDR,EAAAA,EAAAA,KAAA,UACES,KAAMJ,EAAMI,KACZE,SAAUN,EAAMM,SAChBR,UAAU,kDAAiDF,SAE1DI,EAAMO,QAAQR,KAAI,CAACS,EAAQC,KAC1Bd,EAAAA,EAAAA,KAAA,UAAgBe,MAAOF,EAAOE,MAAMd,SACjCY,EAAOL,OADGM,SARTR,GAgBK,SAAfD,EAAME,MAENL,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOG,UAAU,2BAA0BF,SAAEI,EAAMG,SACnDR,EAAAA,EAAAA,KAAA,SACEO,KAAK,OACLE,KAAMJ,EAAMI,KACZE,SAAUN,EAAMM,SAChBR,UAAU,sDANJG,GAWP,QAETN,EAAAA,EAAAA,KAAA,UACEO,KAAK,SACLJ,UAAU,wEAAuEF,SAClF,gBAIC,C","sources":["components/DynamicForm.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst DynamicForm = ({ endpoint, title }) => {\r\n  const [formFields, setFormFields] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch form schema from the backend\r\n    const fetchForm = async () => {\r\n      try {\r\n        const response = await fetch(endpoint);\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch form data\");\r\n        }\r\n        const data = await response.json();\r\n        setFormFields(data.fields);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchForm();\r\n  }, [endpoint]);\r\n\r\n  if (loading) return <div>Loading form...</div>;\r\n  if (error) return <div>Error: {error}</div>;\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-8\">\r\n      <h2 className=\"text-2xl font-bold mb-6\">{title}</h2>\r\n      <form className=\"space-y-4\">\r\n        {formFields.map((field, idx) => {\r\n          if (field.type === \"text\" || field.type === \"email\" || field.type === \"number\") {\r\n            return (\r\n              <div key={idx}>\r\n                <label className=\"block text-gray-700 mb-2\">{field.label}</label>\r\n                <input\r\n                  type={field.type}\r\n                  name={field.name}\r\n                  placeholder={field.placeholder}\r\n                  required={field.required}\r\n                  className=\"w-full px-4 py-2 border border-gray-300 rounded\"\r\n                />\r\n              </div>\r\n            );\r\n          }\r\n          if (field.type === \"select\") {\r\n            return (\r\n              <div key={idx}>\r\n                <label className=\"block text-gray-700 mb-2\">{field.label}</label>\r\n                <select\r\n                  name={field.name}\r\n                  required={field.required}\r\n                  className=\"w-full px-4 py-2 border border-gray-300 rounded\"\r\n                >\r\n                  {field.options.map((option, i) => (\r\n                    <option key={i} value={option.value}>\r\n                      {option.label}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            );\r\n          }\r\n          if (field.type === \"file\") {\r\n            return (\r\n              <div key={idx}>\r\n                <label className=\"block text-gray-700 mb-2\">{field.label}</label>\r\n                <input\r\n                  type=\"file\"\r\n                  name={field.name}\r\n                  required={field.required}\r\n                  className=\"w-full px-4 py-2 border border-gray-300 rounded\"\r\n                />\r\n              </div>\r\n            );\r\n          }\r\n          return null;\r\n        })}\r\n        <button\r\n          type=\"submit\"\r\n          className=\"bg-blue-600 text-white px-6 py-2 rounded hover:bg-blue-700 transition\"\r\n        >\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DynamicForm;\r\n"],"names":["_ref","endpoint","title","formFields","setFormFields","useState","loading","setLoading","error","setError","useEffect","async","response","fetch","ok","Error","data","json","fields","err","message","fetchForm","_jsx","children","_jsxs","className","map","field","idx","type","label","name","placeholder","required","options","option","i","value"],"sourceRoot":""}